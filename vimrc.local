:colorscheme slate

" Nerdtree
map <C-n> :NERDTreeToggle<CR>
let NERDTreeShowHidden=1
let NERDTreeMapOpenSplit="s"
let NERDTreeMapOpenVSplit="v"

" Autoremove trailing spaces when saving the buffer
autocmd FileType c,cpp,clj,elixir,eruby,html,java,javascript,php,ruby autocmd BufWritePre <buffer> :%s/\s\+$//e

" Rainbow Parentheses
augroup rainbow_lisp
  autocmd!
  autocmd FileType lisp,clojure,scheme,racket RainbowParentheses
augroup END

" ag is fast enough that CtrlP doesn't need to cache but let's do it anyway
let g:ctrlp_use_caching = 1

" ALE
let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'javascript': ['prettier', 'eslint'],
\   'python': ['black'],
\   'rust': ['rustfmt'],
\   'json': ['jq']
\}
let g:ale_linters = {
\   'python': ['flake8'],
\   'javascript': ['eslint'],
\   'rust': ['analyzer']
\}
let g:ale_fix_on_save = 1
let g:ale_python_black_options = '-l 120'

set complete+=.,b,u,]

" Fix Lisp indentation
autocmd filetype lisp,scheme,art setlocal equalprg=scmindent.rkt

" tslime
let g:tslime_ensure_trailing_newlines = 1
let g:tslime_always_current_session = 1
let g:tslime_always_current_window = 1
vmap <C-c><C-c> <Plug>SendSelectionToTmux
nmap <C-c><C-c> <Plug>NormalModeSendToTmux
nmap <C-c>r <Plug>SetTmuxVars

" Make it obvious where 120 characters is
set textwidth=120
set colorcolumn=+1

" CSV
augroup vimrcEx
  autocmd!

  autocmd BufRead,BufNewFile *.csv set filetype=csv
augroup END

" Fold options
" set foldmethod=syntax
set maxmempattern=2000000
set maxmem=2000000
set maxmemtot=2000000
